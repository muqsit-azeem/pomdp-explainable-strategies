digraph {
0 [label="nearr1' <= 0.5"];
1 [label="r2lastobs' <= 0.5"];
2 [label="r1taken' <= 0.5"];
3 [label="r1lastobs' <= 0.5"];
4 [label="nearr2' <= 0.5"];
5 [label="seefinish' <= 0.5"];
6 [label="8"];
5 -> 6 [label="True"];
7 [label="done' <= 0.5"];
8 [label="6"];
7 -> 8 [label="True"];
9 [label="0"];
7 -> 9 [style="dashed", label="False"];
5 -> 7 [style="dashed", label="False"];
4 -> 5 [label="True"];
10 [label="r2taken' <= 0.5"];
11 [label="16"];
10 -> 11 [label="True"];
12 [label="14"];
10 -> 12 [style="dashed", label="False"];
4 -> 10 [style="dashed", label="False"];
3 -> 4 [label="True"];
13 [label="37"];
3 -> 13 [style="dashed", label="False"];
2 -> 3 [label="True"];
14 [label="nearr2' <= 0.5"];
15 [label="r2taken' <= 0.5"];
16 [label="14"];
15 -> 16 [label="True"];
17 [label="32"];
15 -> 17 [style="dashed", label="False"];
14 -> 15 [label="True"];
18 [label="r2taken' <= 0.5"];
19 [label="18"];
18 -> 19 [label="True"];
20 [label="17"];
18 -> 20 [style="dashed", label="False"];
14 -> 18 [style="dashed", label="False"];
2 -> 14 [style="dashed", label="False"];
1 -> 2 [label="True"];
21 [label="r1taken' <= 0.5"];
22 [label="37"];
21 -> 22 [label="True"];
23 [label="nearr2' <= 0.5"];
24 [label="37"];
23 -> 24 [label="True"];
25 [label="9"];
23 -> 25 [style="dashed", label="False"];
21 -> 23 [style="dashed", label="False"];
1 -> 21 [style="dashed", label="False"];
0 -> 1 [label="True"];
26 [label="nearr2' <= 0.5"];
27 [label="r1taken' <= 0.5"];
28 [label="r2taken' <= 0.5"];
29 [label="r1lastobs' <= 0.5"];
30 [label="r2lastobs' <= 0.5"];
31 [label="2"];
30 -> 31 [label="True"];
32 [label="37"];
30 -> 32 [style="dashed", label="False"];
29 -> 30 [label="True"];
33 [label="37"];
29 -> 33 [style="dashed", label="False"];
28 -> 29 [label="True"];
34 [label="9"];
28 -> 34 [style="dashed", label="False"];
27 -> 28 [label="True"];
35 [label="r2lastobs' <= 0.5"];
36 [label="r2taken' <= 0.5"];
37 [label="14"];
36 -> 37 [label="True"];
38 [label="5"];
36 -> 38 [style="dashed", label="False"];
35 -> 36 [label="True"];
39 [label="9"];
35 -> 39 [style="dashed", label="False"];
27 -> 35 [style="dashed", label="False"];
26 -> 27 [label="True"];
40 [label="r1taken' <= 0.5"];
41 [label="atr1' <= 0.5"];
42 [label="r1lastobs' <= 0.5"];
43 [label="r2lastobs' <= 0.5"];
44 [label="r2taken' <= 0.5"];
45 [label="15"];
44 -> 45 [label="True"];
46 [label="29"];
44 -> 46 [style="dashed", label="False"];
43 -> 44 [label="True"];
47 [label="r2taken' <= 0.5"];
48 [label="14"];
47 -> 48 [label="True"];
49 [label="10"];
47 -> 49 [style="dashed", label="False"];
43 -> 47 [style="dashed", label="False"];
42 -> 43 [label="True"];
50 [label="r2taken' <= 0.5"];
51 [label="r2lastobs' <= 0.5"];
52 [label="10"];
51 -> 52 [label="True"];
53 [label="11"];
51 -> 53 [style="dashed", label="False"];
50 -> 51 [label="True"];
54 [label="4"];
50 -> 54 [style="dashed", label="False"];
42 -> 50 [style="dashed", label="False"];
41 -> 42 [label="True"];
55 [label="r1lastobs' <= 0.5"];
56 [label="r2lastobs' <= 0.5"];
57 [label="r2taken' <= 0.5"];
58 [label="13"];
57 -> 58 [label="True"];
59 [label="7"];
57 -> 59 [style="dashed", label="False"];
56 -> 57 [label="True"];
60 [label="4"];
56 -> 60 [style="dashed", label="False"];
55 -> 56 [label="True"];
61 [label="4"];
55 -> 61 [style="dashed", label="False"];
41 -> 55 [style="dashed", label="False"];
40 -> 41 [label="True"];
62 [label="r2taken' <= 0.5"];
63 [label="r1lastobs' <= 0.5"];
64 [label="4"];
63 -> 64 [label="True"];
65 [label="r2lastobs' <= 0.5"];
66 [label="2"];
65 -> 66 [label="True"];
67 [label="4"];
65 -> 67 [style="dashed", label="False"];
63 -> 65 [style="dashed", label="False"];
62 -> 63 [label="True"];
68 [label="r1lastobs' <= 0.5"];
69 [label="r2lastobs' <= 0.5"];
70 [label="3"];
69 -> 70 [label="True"];
71 [label="4"];
69 -> 71 [style="dashed", label="False"];
68 -> 69 [label="True"];
72 [label="1"];
68 -> 72 [style="dashed", label="False"];
62 -> 68 [style="dashed", label="False"];
40 -> 62 [style="dashed", label="False"];
26 -> 40 [style="dashed", label="False"];
0 -> 26 [style="dashed", label="False"];

}