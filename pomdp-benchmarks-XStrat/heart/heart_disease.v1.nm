pomdp

observables
start, done, test1Result, test2Result
endobservables

global start : bool init false;
global disease1 : [0..1] init 0; // 0: no disease, 1: disease
global disease2 : [0..1] init 0; // 0: no disease, 1: disease
global done : bool init false;

formula symptom = disease1=1 | disease2=1;
formula isCured = disease1=0 & disease2=0 & start;
observable symptoms = symptom;
observable isCured = isCured;

module doctor
    test1Result : [0..2] init 0; // 0: not done, 1: negative, 2: positive
    test2Result : [0..2] init 0; // 0: not done, 1: negative, 2: positive

    // start

    [start] start=false -> 0.25: (start'=true) & (disease1'=0) & (disease2'=0) +
                     0.25: (start'=true) & (disease1'=0) & (disease2'=1) +
                     0.25: (start'=true) & (disease1'=1) & (disease2'=0) +
                     0.25: (start'=true) & (disease1'=1) & (disease2'=1);

    // investigate  
    
    // test1 identifies disease1, but not disease2
    [test1] disease1=0 & disease2=0 & !done & start -> 1 : (test1Result'=1);
    [test1] disease1=1 & disease2=0 & !done & start -> 1 : (test1Result'=2);
    [test1] disease1=0 & disease2=1 & !done & start -> 1 : (test1Result'=1);
    [test1] disease1=1 & disease2=1 & !done & start -> 1 : (test1Result'=2);

    // test2 identifies both diseases, but is costly
    [test2] disease1=0 & disease2=0 & !done & start -> 1 : (test2Result'=1);
    [test2] disease1=1 & disease2=0 & !done & start -> 1 : (test2Result'=2);
    [test2] disease1=0 & disease2=1 & !done & start -> 1 : (test2Result'=2);
    [test2] disease1=1 & disease2=1 & !done & start -> 1 : (test2Result'=2);

    // treatment
    
    // medicine cures disease1, but not disease2
    [medicine] (disease1=0) & (disease2=0) & !done & start -> 1 : (disease1'=0) & (disease2'=0);
    [medicine] (disease1=0) & (disease2=1) & !done & start -> 1 : (disease1'=0) & (disease2'=1);
    [medicine] (disease1=1) & (disease2=0) & !done & start -> 1 : (disease1'=0) & (disease2'=0);
    [medicine] (disease1=1) & (disease2=1) & !done & start -> 1 : (disease1'=0) & (disease2'=1);

    // surgery cures both diseases, but is costly
    [surgery] (disease1=0) & (disease2=0) & !done & start -> 1 : (disease1'=0) & (disease2'=0);
    [surgery] (disease1=0) & (disease2=1) & !done & start -> 1 : (disease1'=0) & (disease2'=0);
    [surgery] (disease1=1) & (disease2=0) & !done & start -> 1 : (disease1'=0) & (disease2'=0);
    [surgery] (disease1=1) & (disease2=1) & !done & start -> 1 : (disease1'=0) & (disease2'=0);

    // wait
    // [wait] true -> true;

    //done
    [Done] isCured -> 1: (done' = true);

endmodule

label "done" = done;

rewards "cost"
    // [start] true : 1;
    [test1] true : 1;
    [test2] true : 10;
    [medicine] (test1Result = 0 & test2Result = 0) : 100; // do not treat without diagnosis
    [medicine] !(test1Result = 0 & test2Result = 0) : 1;
    [surgery] (test1Result = 0 & test2Result = 0) : 100; // do not treat without diagnosis
    [surgery] !(test1Result = 0 & test2Result = 0) : 10;
endrewards